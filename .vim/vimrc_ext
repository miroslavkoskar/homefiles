" vim: ft=vim fdm=marker

let vimrc = get(g:, 'vimrc', expand('<sfile>:p'))

packadd unimpaired

source ~/.vim/vimrc_base

packadd! bufexplorer
packadd! ctrlp
packadd! easy-align
packadd! exchange
packadd! filebeagle
packadd! nerdtree

packadd! fugitive
packadd! fzf
packadd! repeat
packadd! simpylfold
packadd! speeddating
packadd! surround
packadd! syntastic
packadd! tagbar
packadd! tcomment
packadd! undotree

"packadd! ctrlspace
"packadd! dirvish
"packadd! dispatch
"packadd! easymotion
"packadd! easytags
"packadd! emmet
"packadd! gitgutter
"packadd! gundo
"packadd! minibufexpl
"packadd! misc
"packadd! multiple-cursors
"packadd! neomake
"packadd! ultisnips
"packadd! unite
"packadd! visualrepeat

augroup vimrc_ext_lazy_plugins
    autocmd!

    "autocmd FileType python
    "    \ call packadd ycm | call youcompleteme#Enable()
augroup END


" bufexplorer
" ----------------------------------------

let bufExplorerFindActive = 0
let bufExplorerShowRelativePath = 1

nnoremap <silent> <Leader>bb :BufExplorer<CR>


" ctrlp
" ----------------------------------------

let ctrlp_arg_map = 1
let ctrlp_lazy_update = 0
let ctrlp_max_depth = 10
let ctrlp_max_files = 2500
let ctrlp_show_hidden = 1
let ctrlp_working_path_mode = 'rwa'

let ctrlp_prompt_mappings = {
    \ 'PrtCurLeft()': ['<c-h>', '<left>', '<c-^>'],
    \ 'PrtSelectMove("d")': ['<M-j>', '<PageDown>', '<kPageDown>'],
    \ 'PrtSelectMove("u")': ['<M-k>', '<PageUp>', '<kPageUp>'],
    \ }

nnoremap <silent> <M-e> :CtrlPMRUFiles<CR>


" dirvish
" ----------------------------------------

let dirvish_hijack_netrw = 0


" easy-align
" ----------------------------------------

vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)


" easymotion
" ----------------------------------------

let EasyMotion_startofline = 0
let EasyMotion_verbose = 0

map <Leader><Leader>J <Plug>(easymotion-sol-j)
map <Leader><Leader>K <Plug>(easymotion-sol-k)


" easytags
" ----------------------------------------

let easytags_always_enabled = 1
let easytags_async = 1
let easytags_dynamic_files = 1
let easytags_file = '~/.cache/tags'
let easytags_resolve_links = 1
let easytags_suppress_report = 1


" filebeagle
" ----------------------------------------

let filebeagle_hijack_netrw = 0
let filebeagle_show_hidden = 1
let filebeagle_show_line_numbers = 0
let filebeagle_suppress_keymaps = 1

nmap <silent> - <Plug>FileBeagleOpenCurrentBufferDir
nmap <silent> <Leader>gg <Plug>FileBeagleOpenCurrentWorkingDir


" fugitive
" ----------------------------------------

nnoremap <Leader>G :G


" gundo
" ----------------------------------------

nnoremap <silent> <F4> :silent GundoToggle<CR>


" minibufexpl
" ----------------------------------------

let miniBufExplModSelTarget = 1
let miniBufExplUseSingleClick = 1
let miniBufExplorerMoreThanOne = 1000

noremap <silent> <Leader>B :MiniBufExplorer<CR>


" nerdtree
" ----------------------------------------

let NERDTreeAutoDeleteBuffer = 1
let NERDTreeBookmarksFile = $VIMDIR.'/.NERDTreeBookmarks'
let NERDTreeCaseSensitiveSort = 1
let NERDTreeHijackNetrw = 0
let NERDTreeIgnore = ['^\.svn$', '^\.git$', '\.swp$', '\~$']
let NERDTreeMapCWD = 'cD'
let NERDTreeMapHelp = '<F1>'
let NERDTreeShowBookmarks = 1
let NERDTreeShowHidden = 1
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path._strForUI():''}"
let NERDTreeWinSize = 36

noremap <silent> <F1> :NERDTreeFind<CR>
noremap <silent> <F2> :NERDTreeToggle<CR>
noremap <silent> <Leader>tf :NERDTreeFind<CR>
noremap <silent> <Leader>tt :NERDTreeToggle<CR>


" syntastic
" ----------------------------------------

set statusline+=%(\ %#ErrorMsg#%{SyntasticStatuslineFlag()}%*%)

let syntastic_aggregate_errors = 1
let syntastic_always_populate_loc_list = 1
let syntastic_auto_jump = 3
let syntastic_auto_loc_list = 0
let syntastic_check_on_open = 0
let syntastic_sort_aggregated_errors = 0
let syntastic_stl_format = ' %E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w} '

let syntastic_error_symbol = '>'
let syntastic_style_error_symbol = '>'
let syntastic_style_warning_symbol = '>'
let syntastic_warning_symbol = '>'

nnoremap <silent> <Leader>SS :SyntasticCheck<CR>
nnoremap <silent> <Leader>Si :SyntasticInfo<CR>
nnoremap <silent> <Leader>Sr :SyntasticReset<CR>

let g:syntastic_python_flake8_args='--ignore=E501,E128'
let g:syntastic_sh_checkers = ['shellcheck']
let g:syntastic_sh_shellcheck_args='--exclude=SC1007,SC1090,SC1091,SC2015,SC2032,SC2033,SC2088,SC2094,SC2139,SC2148'


" tagbar
" ----------------------------------------

let tagbar_autofocus = 1
let tagbar_iconchars = ['▸', '▾']
let tagbar_map_help = ['<F1>']
let tagbar_map_jump = ['<CR>', 'o']
let tagbar_map_togglefold = ['O', 'za']
let tagbar_sort = 0

highlight TagbarHighlight cterm=reverse

noremap <silent> <F8> :Tagbar<CR>
noremap <silent> <Leader>T :TagbarOpenAutoClose<CR>


" tcomment
" ----------------------------------------

let tcommentMaps = 0
let tcommentOptions = {'whitespace': 'no'}

nnoremap <silent> <Leader>C :TCommentBlock<CR>
nnoremap <silent> <Leader>cc :TComment<CR>
vnoremap <silent> <Leader>C :TCommentBlock<CR>
vnoremap <silent> <Leader>cc :TComment<CR>


" unite
" ----------------------------------------

nnoremap <silent> <Leader>u :Unite<CR>


" ycm
" ----------------------------------------

let ycm_autoclose_preview_window_after_completion = 1


" ----------------------------------------

augroup vimrc_ext
    autocmd!

    autocmd BufWinEnter -MiniBufExplorer-
        \  call utils#BufSpecial()
        \| nnoremap <silent> <buffer> q :close<CR>

    autocmd BufWinEnter \[BufExplorer\]
        \  call utils#BufSpecial()
        \| normal! 4gg

    autocmd User FileBeagleReadPre
        \  unmap <buffer> <BS>
        \| nmap <buffer> <silent> u <Plug>(FileBeagleBufferFocusOnPrevious)

    autocmd FileType filebeagle call utils#BufSpecial()
    autocmd FileType nerdtree call utils#BufSpecial()
    autocmd FileType tagbar call utils#BufSpecial()
augroup END
