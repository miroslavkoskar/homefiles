" vim: ft=vim fdm=marker

let vimrc = get(g:, 'vimrc', expand('<sfile>:p'))
source ~/.vim/vimrc_base

" ----------------------------------------

Plugin 'NERD_tree'
Plugin 'bufexplorer'
Plugin 'ctrlp'
Plugin 'dispatch'
Plugin 'easy_align'
Plugin 'easymotion'
Plugin 'easytags'
Plugin 'emmet'
Plugin 'exchange'
Plugin 'filebeagle'
Plugin 'gundo'
Plugin 'minibufexpl'
Plugin 'misc'
Plugin 'multiple_cursors'
Plugin 'repeat'
Plugin 'speeddating'
Plugin 'surround'
Plugin 'syntastic'
Plugin 'tagbar'
Plugin 'tcomment'
Plugin 'unimpaired'
Plugin 'unite'
Plugin 'visualrepeat'

" {{{

" ========== NERD_tree

let NERDTreeAutoDeleteBuffer = 1
let NERDTreeBookmarksFile = $VIMDIR.'/.NERDTreeBookmarks'
let NERDTreeCaseSensitiveSort = 1
let NERDTreeHijackNetrw = 0
let NERDTreeIgnore = ['^\.svn$', '^\.git$', '\.swp$', '\~$']
let NERDTreeMapCWD = 'cD'
let NERDTreeShowBookmarks = 1
let NERDTreeShowHidden = 1
let NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path._strForUI():''}"
let NERDTreeWinSize = 36

noremap <silent> <F1> :NERDTreeFind<CR>
noremap <silent> <F2> :NERDTreeToggle<CR>
noremap <silent> <Leader>tf :NERDTreeFind<CR>
noremap <silent> <Leader>tt :NERDTreeToggle<CR>

" ========== bufexplorer

let bufExplorerFindActive = 0
let bufExplorerShowRelativePath = 1

nnoremap <silent> <Leader>bb :BufExplorer<CR>

" ========== ctrlp

let ctrlp_arg_map = 1
let ctrlp_lazy_update = 0
let ctrlp_max_depth = 10
let ctrlp_max_files = 2500
let ctrlp_show_hidden = 1
let ctrlp_working_path_mode = 'rwa'

let ctrlp_prompt_mappings = {
    \ 'PrtCurLeft()': ['<c-h>', '<left>', '<c-^>'],
    \ 'PrtSelectMove("d")': ['<m-j>', '<PageDown>', '<kPageDown>'],
    \ 'PrtSelectMove("u")': ['<m-k>', '<PageUp>', '<kPageUp>'],
    \ }

nnoremap <silent> <M-e> :CtrlPMRUFiles<CR>

" ========== easy_align

vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

" ========== easytags

let easytags_always_enabled = 1
let easytags_async = 1
let easytags_dynamic_files = 1
let easytags_file = '~/.cache/tags'
let easytags_resolve_links = 1
let easytags_suppress_report = 1

" ========== filebeagle

let filebeagle_show_hidden = 1
let filebeagle_show_line_numbers = 1
let filebeagle_suppress_keymaps = 1

nmap <silent> - <Plug>FileBeagleOpenCurrentBufferDir
nmap <silent> <Leader>gg <Plug>FileBeagleOpenCurrentWorkingDir

" ========== fugitive

nnoremap <Leader>G :G

" ========== gundo

nnoremap <silent> <F4> :silent GundoToggle<CR>

" ========== minibufexpl

let miniBufExplModSelTarget = 1
let miniBufExplUseSingleClick = 1
let miniBufExplorerMoreThanOne = 1000

noremap <silent> <Leader>B :MiniBufExplorer<CR>

" ========== syntastic

set statusline+=%(\ %#ErrorMsg#%{SyntasticStatuslineFlag()}%*%)

let syntastic_aggregate_errors = 1
let syntastic_always_populate_loc_list = 1
let syntastic_auto_jump = 3
let syntastic_auto_loc_list = 0
let syntastic_check_on_open = 0
let syntastic_sort_aggregated_errors = 0
let syntastic_stl_format = ' %E{Err: %fe #%e}%B{, }%W{Warn: %fw #%w} '

let syntastic_error_symbol = '>'
let syntastic_warning_symbol = '>'
let syntastic_style_error_symbol = '>'
let syntastic_style_warning_symbol = '>'

nnoremap <silent> <Leader>SS :SyntasticCheck<CR>
nnoremap <silent> <Leader>Si :SyntasticInfo<CR>
nnoremap <silent> <Leader>Sr :SyntasticReset<CR>

" ========== tagbar

let tagbar_autofocus = 1
let tagbar_iconchars = ['▸', '▾']
let tagbar_map_jump = ['<CR>', 'o']
let tagbar_map_togglefold = ['O', 'za']
let tagbar_sort = 0

highlight TagbarHighlight cterm=reverse

noremap <silent> <F8> :Tagbar<CR>
noremap <silent> <Leader>T :TagbarOpenAutoClose<CR>

" ========== tcomment

let tcommentMaps = 0

nnoremap <silent> <Leader>cc :TComment<CR>
nnoremap <silent> <Leader>C :TCommentBlock<CR>
vnoremap <silent> <Leader>cc :TComment<CR>
vnoremap <silent> <Leader>C :TCommentBlock<CR>

" ========== unite

nnoremap <silent> <Leader>u :Unite<CR>

" ----------------------------------------

if has('autocmd')
augroup vimrc_ext
    autocmd!

    autocmd BufWinEnter -MiniBufExplorer-
        \  call BufSpecialSetup()
        \| nnoremap <silent> <buffer> q :close<CR>

    autocmd BufWinEnter \[BufExplorer\] call BufSpecialSetup()

    autocmd BufWritePost ~/.Xresources !xrdb -load ~/.Xresources

    autocmd User FileBeagleReadPre
        \  unmap <buffer> <BS>
        \| nmap <buffer> <silent> u <Plug>(FileBeagleBufferFocusOnPrevious)

    autocmd FileType nerdtree call BufSpecialSetup()
    autocmd FileType tagbar call BufSpecialSetup()

augroup END
endif

" }}}

" ----------------------------------------

execute VimrcFinalize()
