" vim: ft=vim fdm=marker

let vimrc = get(g:, 'vimrc', expand('<sfile>:p'))

source ~/.vim/vimrc_base

set buftype=nowrite
set colorcolumn=0
set laststatus=1
set nobackup
set nolist
set noswapfile
set signcolumn=no
set tabstop=8
set virtualedit=all

let &viminfo = "!,'100,<50,s10,h,n" . $VIMDIR . '/.viminfo_pg'

" FIXME: disable temporarily to get rid of:
"   E575: Error while reading ShaDa file: mark entry at position XY has invalid line number
let &viminfo = ''

" ----------------------------------------

filetype indent off

noremap <silent> r :Reload<CR>
noremap <silent> R :ReloadT<CR>
noremap <silent> F :ReloadT!<CR>

nnoremap <silent> q :QuitTab<CR>
nnoremap <silent> <C-A> :AnsiEsc<CR>

function! InitStdin() abort
    silent edit /dev/fd/8
    setl bt=nofile
    if !empty($PAGER_TITLE)
        file $PAGER_TITLE
    endif
    if $PRGNAME == 'manpg'
        setl ma noro
    elseif $PRGNAME != 'pg0'
        AnsiEsc
    endif
endfunction

function! InitPgx() abort
    setl ro noma
    exec '0System' $CMD
    if !empty($PAGER_TITLE)
        file $PAGER_TITLE
    endif
    AnsiEsc
endfunction

augroup vimrc_pg
    autocmd!

    autocmd BufRead * setl ro noma

    if $PRGNAME == 'pg0'
        autocmd BufRead * setl noml ft=
    endif
augroup END
