#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
    bluetooth-auto
    ~~~~~~~~~~~~~~

    TODO.

    :Compatibility: 3.x
    :Copyright: (c) 2013 Miroslav Koskar (http://mkoskar.com/)
    :License: BSD 2-Clause
"""

from dbus.exceptions import DBusException
from dbus.mainloop.glib import DBusGMainLoop
import dbus
import gobject

SERVICE='org.bluez'
ADAPTER_IFACE='org.bluez.Adapter1'
DEVICE_IFACE='org.bluez.Device1'
OBJECT_MANAGER_IFACE='org.freedesktop.DBus.ObjectManager'


def handle_adapter(path, adapter):
    obj = bus.get_object(SERVICE, path)
    iface = dbus.Interface(obj, dbus.PROPERTIES_IFACE)
    iface.Set(ADAPTER_IFACE, 'Powered', True)
    iface.Set(ADAPTER_IFACE, 'Pairable', False)


def handle_device(path, device):
    try:
        obj = bus.get_object(SERVICE, path)
        iface = dbus.Interface(obj, DEVICE_IFACE)
        iface.Connect()
    except DBusException as e:
        print(e)


def handler(path, data):
    print(path)
    adapter = data.get(ADAPTER_IFACE)
    if adapter:
        handle_adapter(path, adapter)
        return

    device = data.get(DEVICE_IFACE)
    if device:
        handle_device(path, device)
        return


DBusGMainLoop(set_as_default=True)
bus = dbus.SystemBus()
obj = bus.get_object(SERVICE, '/')
iface = dbus.Interface(obj, OBJECT_MANAGER_IFACE)

iface.connect_to_signal('InterfacesAdded', handler)
loop = gobject.MainLoop()
loop.run()
