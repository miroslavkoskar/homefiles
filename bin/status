#!/usr/bin/env bash

set -eu -o pipefail
shopt -s inherit_errexit

prgname=${0##*/}

if [[ $prgname = 'status-osd' ]]; then
    out=$(status "$@")
    [[ -t 1 ]] && printf '%s\n' "$out"
    osd "$out" || true
    exit
fi

export LC_ALL=C

declare -i xcon=0
xset q &>/dev/null && xcon=1

status_audio() {
    local pval rval
    pval=$(
        unset DISPLAY; amixer get Master |
            gawk 'match($0, /\[([0-9]*%)\].*\[(on|off)\]/, a) {print a[2] " " a[1]; exit}'
    )
    amixer -c 0 get Headphone,1 | grep -Fq 'Playback [on]' && pval="$pval +dock"
    rval=$(
        unset DISPLAY; amixer get Capture |
            gawk 'match($0, /\[([0-9]*%)\].*\[(on|off)\]/, a) {print a[2] " " a[1]; exit}'
    )
    printf 'audio: %s / %s\n' "$pval" "$rval"
}

status_backlight() {
    local val; val=$(backlight)
    printf 'backlight: %s%%\n' "$val"
}

status_bluetooth() {
    local val; val=$(status_rfkill bluetooth)
    printf 'bluetooth: %s\n' "$val"
}

status_dpms() {
    local val='-'
    if (( xcon )); then
        xset q | grep -Fq 'DPMS is Enabled' && val='on' || val='off'
    fi
    printf 'dpms: %s\n' "$val"
}

status_pa_sink() {
    local val; val=$(ponymix defaults | sed -nr '/^sink /{n;s/^\s*//;p}')
    printf 'PA sink: %s\n' "$val"
}

status_rfkill() {
    local val='-' state
    state=$(rfkill-state -a "$1")
    case $state in
        -1)
            val='mixed'
            ;;
        0)
            val='off (software)'
            ;;
        1)
            val='on'
            ;;
        2)
            val='off (hardware)'
            ;;
    esac
    printf '%s' "$val"
}

status_touchpad() {
    local val='-' state
    if (( xcon )); then
        state=$(touchpad)
        case $state in 1) val='on' ;; 0) val='off' ;; esac
    fi
    printf 'touchpad: %s\n' "$val"
}

status_trackpoint_wheel() {
    local val='-' state
    if (( xcon )); then
        state=$(trackpoint-wheel)
        case $state in 1) val='on' ;; 0) val='off' ;; esac
    fi
    printf 'trackpoint wheel: %s\n' "$val"
}

status_wifi() {
    local val; val=$(status_rfkill wlan)
    printf 'wifi: %s\n' "$val"
}

status_xkb() {
    local val='-'
    if (( xcon )); then
        val=$(xkblayout-state print '%s')
    fi
    printf 'xkb: %s\n' "$val"
}

(( $# )) || {
    status_pa_sink
    status_audio
    status_backlight
    status_bluetooth
    status_dpms
    status_touchpad
    status_trackpoint_wheel
    status_wifi
    status_xkb
}

case ${1-} in
    audio | backlight | bluetooth | dpms | pa_sink | \
    touchpad | trackpoint_wheel | wifi | xkb)
        "status_$1"
        ;;
    *)
        exit 2
        ;;
esac
