#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

_usage() {
    echo "usage: $prgname [-b] [play | pause | play-pause | stop | next | prev]"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

declare -i blue=0
while getopts bh opt; do
    case $opt in
        b) blue=1 ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

(( $# )) || usage_err

# ----------------------------------------

bluectl() {
    if [[ $1 = 'play-pause' ]]; then
        local stat; stat=$(bluectl show | awk '/Status:/ { print $2 }')
        case $stat in
            playing)
                bluectl pause
                ;;
            *)
                bluectl play
                ;;
        esac
        return
    fi
    # hack which happens to workaround bluetooth-player input issues
    (sleep 0.01; echo "$1"; sleep 0.01) | bluetooth-player 2>/dev/null
}

_playerctl() {
    local stat1 stat2
    if [[ $1 = 'play-pause' ]]; then
        stat1=$(playerctl status)
        playerctl "$1"
        stat2=$(playerctl status)
        if [[ $stat1 = 'Playing' && $stat2 = 'Playing' ]]; then
            playerctl stop
        fi
        return
    fi
    playerctl "$1"
}

(( blue )) && ctl='bluectl' || ctl='_playerctl'

case $1 in
    prev)
        set -- previous
        ;&
    play | pause | play-pause | stop | next)
        "$ctl" "$1"
        ;;
    *)
        usage_err
        ;;
esac
