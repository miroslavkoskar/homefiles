#!/usr/bin/env python
# -*- coding: utf-8 -*-

from functools import partial
from signal import signal, SIGHUP, SIGINT, SIGTERM, SIG_DFL, SIG_IGN
import subprocess
import sys

SIGHUP_INT_TERM = (SIGHUP, SIGINT, SIGTERM)


def err_usage():
    print('usage: onsighup-terminate child [arg]...', file=sys.stderr)
    sys.exit(2)


def signals(signals, handler):
    for sig in signals:
        signal(sig, handler)


def sigterm(child, signum, frame):
    child.terminate()


# main

signals(SIGHUP_INT_TERM, SIG_IGN)

child_args = sys.argv[1:]
if not child_args:
    err_usage()

child = subprocess.Popen(
    child_args,
    preexec_fn=partial(signals, SIGHUP_INT_TERM, SIG_DFL)
)

signals((SIGHUP, SIGTERM), partial(sigterm, child))

child.wait()
sys.exit(child.returncode)
