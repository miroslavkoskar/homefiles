#!/usr/bin/env bash

set -eu -o pipefail
shopt -s nullglob

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: $prgname [-x] [-n msgs_per_chunk] repodir maildir

	Exports all of repodir's emails to maildir.

	  repodir - path to repository of https://public-inbox.org/ format
	  maildir - path to existing or to be created maildir

	  -x    - create mailbox per chunk
	  -n    - number of messages per chunk (default: 25000)
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

declare -i mb_per_chunk=0 msgs_per_chunk=25000
while getopts xn:h opt; do
    case $opt in
        x) mb_per_chunk=1 ;;
        n) msgs_per_chunk=$OPTARG ;;
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

(( $# == 2 )) || usage_err

# ----------------------------------------

export LANG=C
export delim=$'\c\\\c]\c^\c_' # FS GS RS US
export mb_per_chunk

repodir=$(realpath -m -- "$1")
maildir=$(realpath -m -- "$2")
export repodir maildir

cd "$repodir"
git rev-parse

if (( mb_per_chunk )); then
    if [[ -d $maildir ]]; then
        echo "$maildir exists" >&2
        exit 1
    fi
else
    if [[ -d $maildir ]]; then
        stat "$maildir"/{cur,new,tmp} >/dev/null
    else
        mkdir -p "$maildir"/{cur,new,tmp}
    fi
fi

tmpdir=$(mktemp -d)
cleanup() { rm -rf "$tmpdir"; }
trap cleanup EXIT

git log --reverse --pretty="%H:m $delim%H %ct" master -- m >"$tmpdir"/queue

cd "$tmpdir"
split -d -l "$msgs_per_chunk" queue
find "$tmpdir" -name x\* >chunks

process() {
    set -eu -o pipefail
    cd "$repodir"
    if (( mb_per_chunk )); then
        maildir=$maildir/${1##*/}
        mkdir -p "$maildir"/{cur,new,tmp}
    fi
    git cat-file --batch='%(rest)' <"$1" |
        gawk -v RS="$delim" -v maildir="$maildir" -v hostname="$HOSTNAME" '
            BEGIN { FS = "\n"; ORS = ""; }
            NR == 1 { next }
            {
                match($0, /^(\S+) (\S+)\n/, m)
                sub("[^\n]*\n", "") # remove first line
                sub("\n$", "") # remove last line
                outfile = maildir "/cur/" m[2] ".O" m[1] "." hostname ":2,S"
                print >outfile
                close(outfile)
            }
            END { print NR-1 "\n" }
        '
}
export -f process

pargs=()
[[ -t 1 ]] && pargs+=(--bar) || pargs+=(--silent)
nice parallel "${pargs[@]}" process <chunks >out

declare -i written=0 queued nr
queued=$(wc -l <queue)
while read -r nr; do
    written=$((written+nr))
done <out

if [[ -t 1 ]]; then
    printf 'Queued:  %9d\n' "$queued"
    printf 'Written: %9d\n' "$written"
else
    printf '%d\n' "$queued"
    printf '%d\n' "$written"
fi
