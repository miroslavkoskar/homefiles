#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

_usage() {
    echo "usage: $prgname block-device-name (e.g., sda, dm-0) or device itself"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

while getopts h opt; do
    case $opt in
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

(( $# )) || usage_err

# ----------------------------------------

stop_device() {
    local devname=$1 devtype dmname
    local dev=/dev/$devname

    [[ -e $devname ]] || return 1

    devtype=$(lsblk -drn -o TYPE "$dev" 2>/dev/null) || return 1
    case $devtype in
        crypt)
            read -r dmname <"$devname"/dm/name
            cryptsetup remove "$dmname"
            ;;
        lvm | dm)
            read -r dmname <"$devname"/dm/name
            dmsetup --noudevsync remove "$dmname"
            ;;
        raid*)
            IFS=: read -r metadata _ <"$devname"/md/metadata_version
            if [[ $metadata = external ]]; then
                mdadm --wait-clean "$dev"
            fi
            mdadm --stop "$dev"
            ;;
        dmraid)
            read -r dmname <"$devname"/dm/name
            dmraid -an "$dmname"
            ;;
        loop)
            losetup -d "$devname"
            ;;
    esac
}

umount_device() {
    local devname=$1 devtype type name holder
    local dev=/dev/$devname

    [[ -e $devname ]] || return 1

    devtype=$(lsblk -drn -o TYPE "$dev" 2>/dev/null) || return 1
    if [[ $devtype = disk ]]; then
        lsblk -rn -o TYPE,NAME "$dev" |
            while read -r type name; do
                [[ $type = part ]] || continue
                umount_device "$name"
            done
    fi

    for holder in "$devname"/holders/*; do
        [[ -e $holder ]] || continue
        umount_device "${holder##*/}"
    done

    if findmnt --source "$dev" &>/dev/null; then
        umount -A --recursive "$dev"
    fi

    stop_device "$devname"
}

cd /sys/class/block

[[ $1 != /* ]] && dev=/dev/$1 || dev=$1
dev=$(realpath -- "$dev")
devname=${dev##*/}

umount_device "$devname"
