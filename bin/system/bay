#!/usr/bin/env bash

set -eu

if (( $EUID )); then
    echo 'This script must be run with root privileges.' >&2
    exit 1
fi

prgname=${0##*/}

dock=$(grep -l ata_bay /sys/devices/platform/dock.?/type)
dock=${dock%%/type}

if [[ ! -d $dock || ! -r $dock/docked ]]; then
    exit 1
fi

declare -i undock=0 standby=0
case $prgname in
    bay-undock)
        undock=1
        ;;
    bay-standby)
        standby=1
        ;;
esac

if [[ $(<"$dock/docked") = '0' ]]; then
    echo 'undocked' >&2
else
    echo 'docked' >&2
    sysdev='/sys/devices/pci0000:00/0000:00:1f.2/ata2/host1/target1:0:0/1:0:0:0'
    devname=("$sysdev/block/"*)

    if [[ -d $devname ]]; then
        devname=${devname##*/}
        dev="/dev/$devname"
    else
        echo 'no block device' >&2
    fi

    if (( $standby )); then
        echo 'standby...' >&2
        [[ ! -r $dev ]] && exit 1

        if ! smartctl -i -n standby -- "$dev" &>/dev/null; then
            echo 'already in standby' >&2
        else
            hdparm -y -- "$dev" &>/dev/null
        fi
    fi

    if (( $undock )); then
        if [[ -r $dev ]]; then
            echo "sync..." >&2
            sync

            echo "umountall $devname..." >&2
            umountall "$devname"

            echo 'standby...' >&2
            hdparm -y -- "$dev" &>/dev/null
        fi

        if [[ -d $sysdev ]]; then
            echo 'detach...' >&2
            echo 1 >>"$sysdev/delete"
        fi

        echo 'undock...' >&2
        if [[ ! -w $dock/undock ]]; then
            exit 1
        fi
        echo 1 >>"$dock/undock"
    fi
fi
