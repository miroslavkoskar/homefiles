#!/usr/bin/env bash
#
# Get information about X server (based on DISPLAY environment variable).

set -eu
shopt -s inherit_errexit

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: $prgname [cmd | dispno | name | pid]

	Get information about X server (based on DISPLAY environment variable).

	  cmd     - get command-line
	  dispno  - get display number
	  name    - get command name
	  pid     - get PID
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

while getopts h opt; do
    case $opt in
        h) usage ;;
        *) usage_err ;;
    esac
done
shift $((OPTIND-1))

# ----------------------------------------

xserver_dispno() {
    xset q &>/dev/null || exit 1
    [[ $DISPLAY =~ ^:([0-9]+)(\.[0-9]+)?$ ]] || exit 1
    printf '%d\n' "${BASH_REMATCH[1]}"
}

xserver_pid() {
    local dispno; dispno=$(xserver_dispno)
    local lockfile=/tmp/.X$dispno-lock
    [[ -e $lockfile ]] || exit 1
    sed -r 's/\s+//g' "$lockfile"
}

xserver_cmd() {
    local pid; pid=$(xserver_pid)
    ps --pid "$pid" -o cmd=
}

xserver_name() {
    local pid; pid=$(xserver_pid)
    ps --pid "$pid" -o comm=
}

case ${1-} in
    cmd)
        xserver_cmd
        ;;
    dispno)
        xserver_dispno
        ;;
    name)
        xserver_name
        ;;
    pid)
        xserver_pid
        ;;
    *)
        usage_err
        ;;
esac
