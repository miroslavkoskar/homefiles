#!/usr/bin/env bash

set -eu
shopt -s nullglob

prgname=${0##*/}

_usage() {
    cat <<-EOF
	usage: ff [arg]...
	       ffp [profile [arg]...]
	       ffdev [profile [arg]...]
	EOF
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

while getopts 'h' opt; do
    case $opt in
        h)
            usage
            ;;
        *)
            usage_err
            ;;
    esac
done
shift $((OPTIND-1))

# ----------------------------------------

profile=
bin='/usr/bin/firefox'
bin_name='firefox'

case $prgname in
    ff)
        profile='default'
        ;;
    ffdev)
        bin='/usr/bin/firefox-developer'
        bin_name='firefox-dev'
        ;;
esac

if [[ ! $profile ]] && (( $# )); then
    profile=$1
    shift
fi

if [[ ! $profile ]]; then
    if [[ $bin_name = 'firefox' ]]; then
        profiles=(
            devel
            lab
            plain
            proxy
            quarantine
        )
    fi
    for p in ~/.config/"$bin_name".*; do
        profiles+=("${p#*"$bin_name".}")
    done
    profile=$(
        (set +u; IFS=$'\n'; printf '%s' "${profiles[*]}") |
        sort -u | grep -P "${regexp-}" |
        dmenu1 "$prgname"
    )
fi

[[ ! $profile ]] && exit 1

# Workaround to ensure separate instance per profile.
export LOGNAME="$USER.$bin_name.$profile"

path="$HOME/.config/$bin_name"
[[ $bin_name = 'firefox' && $profile = 'default' ]] || path+=".$profile"

if [[ ! -d "$path" ]]; then
    mkdir "$path"
    cd "$path"

    cat >"$path/user.js" <<-EOF
	user_pref("browser.startup.homepage_override.mstone", "ignore");
	user_pref("browser.startup.page", 0);
	user_pref("browser.tabs.closeWindowWithLastTab", false);
	user_pref("datareporting.healthreport.service.firstRun", false);
	user_pref("datareporting.healthreport.uploadEnabled", false);
	user_pref("privacy.donottrackheader.enabled", true);
	EOF
fi

exec "$bin" --class "Firefox ($profile)" --profile "$path" "$@"
