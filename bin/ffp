#!/usr/bin/env bash

set -eu
shopt -s nullglob

prgname=${0##*/}

_usage() {
    echo "usage: $prgname [-p profile] [arg]..."
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

bin='/usr/bin/firefox'
bin_name='firefox'
profile=

case $prgname in
    ff)
        profile='default'
        ;;
    ffdev)
        bin='/usr/bin/firefox-developer'
        bin_name='firefox-dev'
        ;;
esac

while getopts 'p:h' opt; do
    case $opt in
        p)
            profile=$OPTARG
            ;;
        h)
            usage
            ;;
        *)
            usage_err
            ;;
    esac
done
shift $((OPTIND-1))

# ----------------------------------------

if [[ ! $profile ]]; then
    if [[ $bin_name = 'firefox' ]]; then
        profiles=(
            devel
            lab
            plain
        )
    fi
    for p in ~/.config/"$bin_name".*; do
        profiles+=("${p#*"$bin_name".}")
    done
    filter=
    profile=$(
        (set +u; IFS=$'\n'; printf '%s' "${profiles[*]}") |
        sort -u | grep -P "$filter" |
        dmenu1 "$prgname"
    )
fi

[[ ! $profile ]] && exit 1

# Workaround to ensure separate instance per profile.
export LOGNAME="$USER.$bin_name.$profile"

path="$HOME/.config/$bin_name"
[[ $bin_name = 'firefox' && $profile = 'default' ]] || path+=".$profile"

mkdir -p "$path"
cd "$path"

[[ ! -e user.js ]] && cat >user.js <<-EOF
	//user_pref('browser.tabs.remote.force-enable', true);
	//user_pref('layers.acceleration.force-enabled', true);
	//user_pref('network.http.pipelining', true);
	//user_pref('network.http.proxy.pipelining', true);
	//user_pref('network.http.referer.XOriginPolicy', 1);
	//user_pref('network.http.referer.spoofSource', true);
	//user_pref('network.http.referer.trimmingPolicy', 2 );
	//user_pref('network.http.sendRefererHeader', 1);
	//user_pref('privacy.trackingprotection.enabled', true);
	user_pref('browser.newtabpage.directory.ping', '');
	user_pref('browser.newtabpage.directory.source', '');
	user_pref('browser.newtabpage.enabled', false);
	user_pref('browser.newtabpage.enhanced', false);
	user_pref('browser.startup.homepage_override.mstone', 'ignore');
	user_pref('browser.startup.page', 0);
	user_pref('browser.tabs.closeWindowWithLastTab', false);
	user_pref('browser.tabs.remote.autostart', true);
	user_pref('datareporting.policy.dataSubmissionEnabled', false);
	user_pref('privacy.donottrackheader.enabled', true);
	user_pref('security.ssl3.dhe_rsa_aes_128_sha', false);
	user_pref('security.ssl3.dhe_rsa_aes_256_sha', false);
EOF

mkdir -p chrome
cd chrome

case $profile in
    devel)  frame_color='#0099FF' ;;
    lab)    frame_color='#FF2200' ;;
    plain)  frame_color='#26BF30' ;;
    *)      frame_color='#FF9900' ;;
esac

if [[ ! -e userChrome.css ]]; then
    touch userChrome.css
    [[ $profile != 'default' ]] && cat >userChrome.css <<-EOF
		#TabsToolbar::before {
		    content: "$profile";
		    background: $frame_color;
		    color: white;
		    display: -moz-box;
		    font-family: monospace;
		    font-weight: bold;
		    padding: 7px 5px 0;
		}
	EOF
fi

[[ ! -e userContent.css ]] && touch userContent.css

exec "$bin" --class "Firefox ($profile)" --profile "$path" "$@"
