#!/usr/bin/env bash

set -eu -o pipefail

prgname=${0##*/}

# ----------------------------------------

cmd() {
    tmux -L "${socket:-default}" "$@"
}

exists () {
    cmd has -t "$session" &>/dev/null
}

new() {
    cmd new -d -s "$session" true \; setw remain-on-exit on
    cmd setenv -t "$session" SHOME "$PWD" \; neww -kt :0 "$@"
}

neww() {
    cmd neww -t "$session:" "$@"
}

# ----------------------------------------

_s() {
    new
    neww -d
}

_sp() {
    new 'trun ranger' \
        \; setw remain-on-exit on \
        \; setw main-pane-height 30 \
        \; selectl main-horizontal

    neww 'trun vim --servername "$TMUX"' \
        \; setw remain-on-exit on \
        \; splitw -h \
        \; setw main-pane-width 84 \
        \; selectl main-vertical
}

# ----------------------------------------

_adm() {
    cd ~
    _sp
    neww -d
}

_aux() {
    cd ~

    local notesdir="$HOME/projects/notes/src"
    new -n notes -c "$notesdir" 'trun e' \
        \; setw remain-on-exit on \
        \; splitw -h -c "$notesdir" \
        \; setw main-pane-width 121 \
        \; selectl main-vertical \
        \; selectp -t :.0 \
        \; resize-pane -Z

    neww -n mail 'trun mutt' \
        \; setw remain-on-exit on

    neww -n chat 'trun weechat' \
        \; setw remain-on-exit on

    neww -n feeds 'trun newsbeuter' \
        \; setw remain-on-exit on

    #neww -n music 'trun ncmpcpp' \
    #    \; setw remain-on-exit on

    cmd selectw -t :1
}

_mon() {
    cd ~

    new -n top 'trun onsigwinch-exec tmux selectl -- conky' \
        \; setw remain-on-exit on \
        \; splitw -h 'trun htop' \
        \; setw main-pane-width 43 \
        \; selectl main-vertical

    neww -n journal 'trun journalctl --system -f' \
        \; setw remain-on-exit on \
        \; splitw -v 'trun journalctl --user -f' \
        \; selectl even-vertical \
        \; selectp -t :.0

    neww -n sstat 'trun pgx sstat' \
        \; setw remain-on-exit on

    neww -n iftop 'trun iftop' \
        \; setw remain-on-exit on

    neww -n logs -c /var/log

    cmd selectw -t :0
}

_tmp() {
    cd ~/tmp
    _s
}

_wrk() {
    cd ~/projects
    _sp
}

# ----------------------------------------

_usage() {
    echo "usage: $prgname [-d] [session] [socket]"
}
usage() { _usage; exit 0; }
usage_err() { _usage; exit 2; } >&2

declare -i dopt=0
while getopts 'dh' opt; do
    case $opt in
        d)
            dopt=1
            ;;
        h)
            usage
            ;;
        *)
            usage_err
            ;;
    esac
done
shift $((OPTIND-1))

attach=$((!dopt))
session=${1-}
socket=${2-}

if [[ ! $session ]]; then
    session=$(sed -r "s,^$HOME(/|$),~\1," <<<"$PWD")
    if [[ $session != '/' && $session != '~' ]]; then
        sdigest=$(sha1sum <<<"$session" | awk '{print $1}')
        session=$(tr '.:' _ <<<"$session")
        session="=${session##*/}_#${sdigest: -2}"
    fi
fi

(exec 8>"$XDG_RUNTIME_DIR/s.lck"
if ! flock -w 30 8; then
    exit 3
fi
(exec 8<&-

if ! exists; then
    case $session in
        adm | aux | mon | tmp | wrk)
            _$session
            ;;
        *)
            case $prgname in s | sp) ;; *) exit 2 ;; esac
            _$prgname
            ;;
    esac
fi

))

if (( $attach )); then
    exec tmux -L "${socket:-default}" attach -t "$session"
fi
